name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          echo "$SSH_PRIVATE_KEY" > ssh_key.pem
          chmod 600 ssh_key.pem
          mkdir -p $HOME/.ssh
          ssh-keyscan -H $EC2_HOSTNAME >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOSTNAME: ${{ secrets.HOST }}

      - name: Copy files to EC2
        run: |
          ssh -i ssh_key.pem ec2-user@$EC2_HOSTNAME << 'EOF'
            if [ -d ~/dndaiFrontEnd ]; then
              rm -rf ~/dndaiFrontEnd/*
            fi
          EOF
          scp -i ssh_key.pem -r ${GITHUB_WORKSPACE}/* ec2-user@$EC2_HOSTNAME:~/dndaiFrontEnd/
        env:
          EC2_HOSTNAME: ${{ secrets.HOST }}

      # Optional: Increase swap space to 2GB to help with memory during npm install
      - name: Set up swap space on EC2
        run: |
          ssh -i ssh_key.pem ec2-user@$EC2_HOSTNAME << 'EOF'
            if ! grep -q '/swapfile' /etc/fstab; then
              sudo fallocate -l 2G /swapfile
              sudo chmod 600 /swapfile
              sudo mkswap /swapfile
              sudo swapon /swapfile
              echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
            fi
            df -h
          EOF
        env:
          EC2_HOSTNAME: ${{ secrets.HOST }}

      - name: Install Node.js dependencies (production only)
        run: |
          ssh -i ssh_key.pem ec2-user@$EC2_HOSTNAME "export NODE_OPTIONS='--max-old-space-size=1536' && cd ~/dndaiFrontEnd && npm install --production"
        env:
          EC2_HOSTNAME: ${{ secrets.HOST }}

      # Optional: Clean npm cache to free up space after installation
      - name: Clean npm cache after install
        run: |
          ssh -i ssh_key.pem ec2-user@$EC2_HOSTNAME "cd ~/dndaiFrontEnd && npm cache clean --force"
        env:
          EC2_HOSTNAME: ${{ secrets.HOST }}

      # Optional: Check disk usage after npm install to troubleshoot space issues
      - name: Check for large files after npm install
        run: |
          ssh -i ssh_key.pem ec2-user@$EC2_HOSTNAME "cd ~/dndaiFrontEnd && du -ah . | sort -rh | head -n 20"
        env:
          EC2_HOSTNAME: ${{ secrets.HOST }}

      - name: Build the project
        run: |
          ssh -i ssh_key.pem ec2-user@$EC2_HOSTNAME "export NEXT_PUBLIC_BACKEND_URL=https://dndai.app && cd ~/dndaiFrontEnd && npm run build"
        env:
          EC2_HOSTNAME: ${{ secrets.HOST }}

      # Optional: Prune unnecessary dependencies after the build
      - name: Prune Node.js dependencies after build
        run: |
          ssh -i ssh_key.pem ec2-user@$EC2_HOSTNAME "cd ~/dndaiFrontEnd && npm prune --production"
        env:
          EC2_HOSTNAME: ${{ secrets.HOST }}

      - name: Restart the server
        run: |
          ssh -i ssh_key.pem ec2-user@$EC2_HOSTNAME "pm2 delete frontend || true"
          ssh -i ssh_key.pem ec2-user@$EC2_HOSTNAME "cd ~/dndaiFrontEnd && pm2 start npm --name frontend -- start"
        env:
          EC2_HOSTNAME: ${{ secrets.HOST }}
